//
//  LoginViewController.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 11.03.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import GoogleSignIn
import UIKit

protocol LoginDisplayLogic: AnyObject {
    func displayLogin(viewModel: Login.User.ViewModel)
    func displayGoogleLogin()
    func displayFacebookLogin()
    func showIncorrectPasswordAlert()
    func showEmptyFieldsAlert()
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
    // MARK: Routing
      
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
  // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        configureLayouts()
    }
    
    func configureLayouts() {
        email.delegate = self
        password.delegate = self
        googleLogin?.setImage(UIImage(named: "google"), for: .normal)
        googleLogin?.configuration?.imagePadding = 10
        googleLogin?.layer.cornerRadius = 7
        googleLogin?.layer.borderWidth = 1
        googleLogin?.layer.borderColor = UIColor.gray.cgColor
        facebookLogin?.setImage(UIImage(named: "facebook"), for: .normal)
        facebookLogin?.configuration?.imagePadding = 10
    }
  
    // MARK: IBOutlets
  
    @IBOutlet weak var email: UITextField!
    @IBOutlet weak var password: UITextField!
    @IBOutlet weak var googleLogin: UIButton!
    @IBOutlet weak var facebookLogin: UIButton!
    
    // MARK: Login
    
    func login() {
        let userEmail = email.text
        let userPassword = password.text
        let request = Login.User.Request(email: userEmail, password: userPassword)
        interactor?.login(request: request)
    }
  
    func displayLogin(viewModel: Login.User.ViewModel) {
        router?.routeToTabBar(segue: nil)
    }
    
    @IBAction func pressLogin(_ sender: Any) {
        login()
    }
    
    // MARK: Google Login
    
    func loginWithGoogle() {
        GIDSignIn.sharedInstance.signIn(withPresenting: self) { signInResult, error in
            guard error == nil else { return }
            guard let signInResult = signInResult else { return }
            let userGoogle = signInResult.user
            let email = userGoogle.profile!.email
            let firstName = userGoogle.profile!.givenName
            let lastName = userGoogle.profile!.familyName
            let request = Login.Socials.Request(firstName: firstName, lastName: lastName, email: email)
            self.interactor?.googleLogin(request: request)
        }
    }
    
    @IBAction func loginWithGoogle(_ sender: UIButton) {
        loginWithGoogle()
    }
    
    func displayGoogleLogin() {
        router?.routeToTabBar(segue: nil)
    }
    
    // MARK: Fcebook Login
    
    func loginWithFacebook() {
        interactor?.facebookLogin()
    }

    @IBAction func loginWithFacebook(_ sender: UIButton) {
        loginWithFacebook()
    }
    
    func displayFacebookLogin() {
        router?.routeToTabBar(segue: nil)
    }
    
    // MARK: Sign up
    
    @IBAction func pressSignUp(_ sender: UIButton) {
        router?.routeToRegistration(segue: nil)
    }
    
    // MARK: Show Alerts
    
    func showIncorrectPasswordAlert() {
        self.showAlertMessage(message: AlertController.incorrectPassword.rawValue)
    }
    
    func showEmptyFieldsAlert() {
        self.showAlertMessage(message: AlertController.fieldsEmpty.rawValue)
    }
}

extension LoginViewController: UITextFieldDelegate {
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if textField == email {
            password.becomeFirstResponder()
        } else if textField == password {
            pressLogin(textField)
        }
        return true
    }
}


