//
//  InstagramViewController.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 05.05.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol InstagramDisplayLogic: AnyObject {
  func displayPhoto(viewModel: Instagram.User.ViewModel)
    func dismissViewController()
}

class InstagramViewController: UIViewController, InstagramDisplayLogic, WKNavigationDelegate {
  var interactor: InstagramBusinessLogic?
  var router: (NSObjectProtocol & InstagramRoutingLogic & InstagramDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = InstagramInteractor()
    let presenter = InstagramPresenter()
    let router = InstagramRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
    override func viewDidLoad() {
      super.viewDidLoad()
        instagramApi.authorizeApp { (url) in
            DispatchQueue.main.async {
                self.webView.load(URLRequest(url: url!))
            }
        }
    }
  
  // MARK: Properties
    var instagramUser: InstagramUser?
    var instagramApi = InstagramApi.shared
    var testUserData: InstagramTestUser?
    var mainVC: ProfileViewController?
  
    @IBOutlet weak var webView: WKWebView! {
        didSet {
            webView.navigationDelegate = self
        }
    }
    
    func webView(_ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, decisionHandler: @escaping (WKNavigationActionPolicy) -> Void) {
        let requests = navigationAction.request
        let request = Instagram.User.Request(request: requests)
        interactor?.getTestUserIDandToken(request:request)
        
        decisionHandler(WKNavigationActionPolicy.allow)
    }
    
    func dismissViewController() {
        DispatchQueue.main.async {
            self.dismiss(animated: true)
        }
    }
    
    func fetchPhoto() {
        self.interactor?.fetchPhoto()
    }
    
  func displayPhoto(viewModel: Instagram.User.ViewModel) {
      DispatchQueue.main.async {
          self.dismiss(animated: true) {
              self.mainVC!.imageInstagram.image = UIImage(data: viewModel.image)
          }
      }
  }
}
