//
//  ProfileViewController.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 22.03.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileDisplayLogic: AnyObject {
    func displayUser(viewModel: Profile.ShowUser.ViewModel)
}

class ProfileViewController: UIViewController, ProfileDisplayLogic {
    
    var interactor: ProfileBusinessLogic?
    var router: (NSObjectProtocol & ProfileRoutingLogic & ProfileDataPassing)?

    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = ProfileInteractor()
        let presenter = ProfilePresenter()
        let router = ProfileRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
    // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        fetchUser()
    }
  
    // MARK: Profile IBOutlets
    
    @IBOutlet weak var firstName: UILabel!
    @IBOutlet weak var lastName: UILabel!
    @IBOutlet weak var email: UILabel!
    @IBOutlet weak var editButton: UIBarButtonItem!
    @IBOutlet weak var imageInstagram: UIImageView!

    var instagramApi = InstagramApi.shared
    var testUserData = InstagramTestUser(access_token: "", user_id: 0)
    var instagramUser: InstagramUser?
   var vc: InstagramViewController?
    
    // MARK: Fetch User
    
    func fetchUser() {
        let request = Profile.ShowUser.Request()
        interactor?.fetchUser(request: request)
    }
    
    func displayUser(viewModel: Profile.ShowUser.ViewModel) {
        firstName.text = viewModel.firstName
        lastName.text = viewModel.lastName
        email.text = viewModel.email
    }
    
    // MARK: Favorite Beers Button
    
    @IBAction func tapFavBeersButton(_ sender: UIButton) {
        router?.routeToFavoriteBeers(segue: nil)
    }
    
    @IBAction func tapEditButton(_ sender: UIBarButtonItem) {
        router?.routeToEdit(segue: nil)
    }
    
    // MARK: Fetch Instagram Photo
    
    func fetchInstagramPhoto() {
        vc?.instagramApi = InstagramApi.shared
        vc?.mainVC = self
        router?.routeToInstagram(segue: nil)
    }
    
    @IBAction func tapInstagramBtn(_ sender: Any) {
        fetchInstagramPhoto()
    }
    
    // MARK: Logout
    
    @IBAction func tapLogoutButton(_ sender: UIButton) {
        let alert = UIAlertController(title: "Logout", message: "Are you sure you want to logout?", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default) { _ in
            self.interactor?.logoutUser()
            self.router?.routeToLogin()
        })
        alert.addAction(UIAlertAction(title: "Cancel", style: .cancel))
        present(alert, animated: true, completion: nil)
    }
}
