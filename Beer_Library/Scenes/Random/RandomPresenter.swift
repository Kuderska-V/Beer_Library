//
//  RandomPresenter.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 22.03.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RandomPresentationLogic {
    func presentRandomBeer(response: Random.ShowDetails.Response)
    func presentFavoriteStatus(response: Random.SetFavoriteStatus.Response)
    func presentPin(response: Random.Pin.Response)
    func presentGoogleMapItem(response: Random.MapItem.Response)
    func presentLocation(response: Random.Location.Response)
}

class RandomPresenter: RandomPresentationLogic {

    weak var viewController: RandomDisplayLogic?
  
    // MARK: Present Random Beer
  
    func presentRandomBeer(response: Random.ShowDetails.Response) {
        let viewModel = Random.ShowDetails.ViewModel(
            name: response.beer!.name,
            first_brewed: response.beer!.first_brewed,
            image_url: response.beer!.image_url,
            tagline: response.beer!.tagline,
            description: response.beer!.description,
            isFavorite: response.isFavorite,
            image: response.image
        )
        viewController?.displayRandomBeer(viewModel: viewModel)
    }
    
    // MARK: Present Favorite Status
    
    func presentFavoriteStatus(response: Random.SetFavoriteStatus.Response) {
        let viewModel = Random.SetFavoriteStatus.ViewModel(isFavorite: response.isFavorite)
        viewController?.displayFavoriteButtonStatus(viewModel: viewModel)
    }
    
    // MARK: Present Location
    
    func presentPin(response: Random.Pin.Response) {
        let viewModel = Random.Pin.ViewModel(pin: response.pin)
        viewController?.displayPin(viewModel: viewModel)
    }
    
    func presentGoogleMapItem(response: Random.MapItem.Response) {
        let viewModel = Random.MapItem.ViewModel(mapItem: response.mapItem)
        viewController?.displayGoogleMapItem(viewModel: viewModel)
    }
    
    func presentLocation(response: Random.Location.Response) {
        let viewModel = Random.Location.ViewModel(location: response.location)
        viewController?.displayLocation(viewModel: viewModel)
    }
}
