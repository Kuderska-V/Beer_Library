//
//  RegistrationInteractor.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 10.03.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegistrationBusinessLogic {
    func registerNewUser(request: Registration.User.Request)
}

protocol RegistrationDataStore {
    //var name: String { get set }
}

class RegistrationInteractor: RegistrationBusinessLogic, RegistrationDataStore {
    
    var presenter: RegistrationPresentationLogic?
    //  var worker: RegistrationWorker?
    let defaults = UserDefaults.standard
  
    // MARK: Do something
  
    func registerNewUser(request: Registration.User.Request)  {
        if Validator().isValid(email: request.email!) {
            if Validator().isValid(password: request.password!) {
                if request.password == request.passwordConfirm {
                    let newUser = CoreDataManager()
                    newUser.createUser(firstName: request.firstName!, lastName: request.lastName!, email: request.email!, password: request.password!)
                    defaults.set(request.email, forKey: UserDefaultsKeys.loggedInUserEmail.rawValue)
                    
                    let response = Registration.User.Response(firstName: request.firstName, lastName: request.lastName, email: request.email, password: request.password, passwordConfirm: request.passwordConfirm)
                    presenter?.presentRegisteredUser(response: response)
                } else {
                    presenter?.presentPasswordConfirmationError()
                }
            } else {
                presenter?.presentInvalidPassword()
            }
        } else {
            presenter?.presentInvalidEmail()
        }
    }
}
