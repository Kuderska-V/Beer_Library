//
//  RegistrationInteractor.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 10.03.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegistrationBusinessLogic {
    func registerNewUser(request: Registration.User.Request)
}

protocol RegistrationDataStore {
}

class RegistrationInteractor: RegistrationBusinessLogic, RegistrationDataStore {

    var presenter: RegistrationPresentationLogic?
    let newUser = CoreDataManager()
    let defaults = UserDefaults.standard
  
    // MARK: Register New User
  
    func registerNewUser(request: Registration.User.Request)  {
        guard !request.firstName!.isEmpty && !request.lastName!.isEmpty && !request.email!.isEmpty && !request.password!.isEmpty && !request.passwordConfirm!.isEmpty else { presenter?.presentEmptyFields(); return }
        guard Validator().isValid(email: request.email!) else { presenter?.presentInvalidEmail(); return }
        guard Validator().isValid(password: request.password!) else { presenter?.presentInvalidPassword(); return }
        guard request.password == request.passwordConfirm else { presenter?.presentPasswordConfirmationError(); return }
        newUser.createUser(firstName: request.firstName!, lastName: request.lastName!, email: request.email!, password: request.password!)
        defaults.set(request.email, forKey: UserDefaultsKeys.loggedInUserEmail.rawValue)
        
        let response = Registration.User.Response(firstName: request.firstName,
                                                  lastName: request.lastName,
                                                  email: request.email,
                                                  password: request.password,
                                                  passwordConfirm: request.passwordConfirm)
        presenter?.presentRegisteredUser(response: response)
    }
}
