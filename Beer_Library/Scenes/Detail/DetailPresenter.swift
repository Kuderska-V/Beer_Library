//
//  DetailPresenter.swift
//  Beer_Library
//
//  Created by Vitalina Nazaruk on 30.03.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPresentationLogic {
    func presentBeerDetails(response: Detail.ShowDetail.Response)
    func presentFavoriteStatus(response: Detail.SetFavoriteStatus.Response)
    func presentDetails(response: Detail.Details.Response)
    func presentPin(response: Detail.Pin.Response)
    func presentGoogleMapItem(response: Detail.MapItem.Response)
    func presentLocation(response: Detail.Location.Response)
}

class DetailPresenter: DetailPresentationLogic {
    weak var viewController: DetailDisplayLogic?
  
    // MARK: Present Beer Details
  
    func presentBeerDetails(response: Detail.ShowDetail.Response) {
        let viewModel = Detail.ShowDetail.ViewModel(
            name: response.beer!.name,
            first_brewed: response.beer!.first_brewed,
            image_url: response.beer!.image_url,
            isFavorite: response.isFavorite,
            image: response.image
        )
        viewController?.displayBeerDetails(viewModel: viewModel)
    }
    
    func presentDetails(response: Detail.Details.Response) {
        let viewModel = Detail.Details.ViewModel(tagline: response.tagline, description: response.description)
        viewController?.displayDetails(viewModel: viewModel)
    }
    
    // MARK: Present Favorite Status
    
    func presentFavoriteStatus(response: Detail.SetFavoriteStatus.Response) {
        let viewModel = Detail.SetFavoriteStatus.ViewModel(isFavorite: response.isFavorite)
        viewController?.displayFavoriteButtonStatus(viewModel: viewModel)
    }
    
    // MARK: Present Location
    
    func presentLocation(response: Detail.Location.Response) {
        let viewModel = Detail.Location.ViewModel(location: response.location)
        viewController?.displayLocation(viewModel: viewModel)
    }
    
    func presentPin(response: Detail.Pin.Response) {
        let viewModel = Detail.Pin.ViewModel(pin: response.pin)
        viewController?.displayPin(viewModel: viewModel)
    }
    
    func presentGoogleMapItem(response: Detail.MapItem.Response) {
        let viewModel = Detail.MapItem.ViewModel(mapItem: response.mapItem)
        viewController?.displayGoogleMapItem(viewModel: viewModel)
    }
}
